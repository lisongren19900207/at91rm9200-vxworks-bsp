# Makefile generated by the project manager
#


# GENERATED: Tue May 01 15:43:29 中国标准时间 2012
# DO NOT EDIT - file is regenerated whenever the project changes


## core information

ifeq ($(wildcard Makefile),)
PRJ_DIR        = ..
else
PRJ_DIR        = .
endif
PRJ_FILE       = BJUT_9200.wpj
PRJ_TYPE       = vxWorks
PRJ_OBJS       = sysALib.o at91EMAC.o romInit_C.o sysLib.o usrAppInit.o prjConfig.o linkSyms.o
BOOT_OBJS      = romInit.o romStart.o $(BOOT_EXTRA)
BUILD_SPEC     = default_rom
BSP_DIR        = $(WIND_BASE)/target/config/BJUT_9200
TGT_DIR        = $(WIND_BASE)/target



## set searching directories for dependencies

vpath %.c $(BSP_DIR)
vpath %.cpp $(BSP_DIR)
vpath %.cxx $(BSP_DIR)


## build-configuration info

ifeq ($(BUILD_SPEC),default)
CPU            = ARMARCH4
TOOL           = gnu
TOOL_FAMILY    = gnu
DEFAULT_RULE   = vxWorks.bin
endif

ifeq ($(BUILD_SPEC),default_rom)
CPU            = ARMARCH4
TOOL           = gnu
TOOL_FAMILY    = gnu
DEFAULT_RULE   = vxWorks_rom.bin
endif

ifeq ($(BUILD_SPEC),default_romCompress)
CPU            = ARMARCH4
TOOL           = gnu
TOOL_FAMILY    = gnu
DEFAULT_RULE   = vxWorks_romCompress
endif

ifeq ($(BUILD_SPEC),default_romResident)
CPU            = ARMARCH4
TOOL           = gnu
TOOL_FAMILY    = gnu
DEFAULT_RULE   = vxWorks_romResident
endif


## component-configuration info

COMPONENTS = INCLUDE_ANSI_ASSERT \
	INCLUDE_ANSI_CTYPE \
	INCLUDE_ANSI_LOCALE \
	INCLUDE_ANSI_MATH \
	INCLUDE_ANSI_STDIO \
	INCLUDE_ANSI_STDIO_EXTRA \
	INCLUDE_ANSI_STDLIB \
	INCLUDE_ANSI_STRING \
	INCLUDE_ANSI_TIME \
	INCLUDE_ARP_API \
	INCLUDE_BOOT_LINE_INIT \
	INCLUDE_BSD_SOCKET \
	INCLUDE_BUF_MGR \
	INCLUDE_CACHE_ENABLE \
	INCLUDE_CACHE_SUPPORT \
	INCLUDE_CBIO \
	INCLUDE_CTORS_DTORS \
	INCLUDE_DEBUG \
	INCLUDE_DHCPC_LEASE_CLEAN \
	INCLUDE_DIAB_INTRINSICS \
	INCLUDE_DISK_CACHE \
	INCLUDE_DISK_UTIL \
	INCLUDE_DLL \
	INCLUDE_DOSFS \
	INCLUDE_DOSFS_CHKDSK \
	INCLUDE_DOSFS_DIR_FIXED \
	INCLUDE_DOSFS_DIR_VFAT \
	INCLUDE_DOSFS_FAT \
	INCLUDE_DOSFS_FMT \
	INCLUDE_DOSFS_MAIN \
	INCLUDE_END \
	INCLUDE_END_BOOT \
	INCLUDE_ENV_VARS \
	INCLUDE_EXC_HANDLING \
	INCLUDE_EXC_SHOW \
	INCLUDE_EXC_TASK \
	INCLUDE_FLOATING_POINT \
	INCLUDE_FORMATTED_IO \
	INCLUDE_FTP \
	INCLUDE_GNU_INTRINSICS \
	INCLUDE_HASH \
	INCLUDE_HOST_TBL \
	INCLUDE_HW_FP_SHOW \
	INCLUDE_ICMP \
	INCLUDE_IGMP \
	INCLUDE_IO_SYSTEM \
	INCLUDE_IP \
	INCLUDE_KERNEL \
	INCLUDE_LOADER \
	INCLUDE_LOGGING \
	INCLUDE_LOOPBACK \
	INCLUDE_LSTLIB \
	INCLUDE_MEMORY_CONFIG \
	INCLUDE_MEM_MGR_BASIC \
	INCLUDE_MEM_MGR_FULL \
	INCLUDE_MMU_BASIC \
	INCLUDE_MODULE_MANAGER \
	INCLUDE_MSG_Q \
	INCLUDE_MSG_Q_SHOW \
	INCLUDE_MUX \
	INCLUDE_NETDEV_CONFIG \
	INCLUDE_NETDEV_NAMEGET \
	INCLUDE_NETMASK_GET \
	INCLUDE_NETWORK \
	INCLUDE_NET_HOST_SETUP \
	INCLUDE_NET_INIT \
	INCLUDE_NET_LIB \
	INCLUDE_NET_REM_IO \
	INCLUDE_NET_SETUP \
	INCLUDE_NET_SHOW \
	INCLUDE_PING \
	INCLUDE_PIPES \
	INCLUDE_POSIX_CLOCKS \
	INCLUDE_POSIX_TIMERS \
	INCLUDE_RAMDRV \
	INCLUDE_RNG_BUF \
	INCLUDE_SELECT \
	INCLUDE_SELECT_SUPPORT \
	INCLUDE_SEM_BINARY \
	INCLUDE_SEM_COUNTING \
	INCLUDE_SEM_MUTEX \
	INCLUDE_SHELL \
	INCLUDE_SHELL_BANNER \
	INCLUDE_SIGNALS \
	INCLUDE_SIO \
	INCLUDE_STANDALONE_SYM_TBL \
	INCLUDE_STDIO \
	INCLUDE_STDIO_SHOW \
	INCLUDE_SW_FP \
	INCLUDE_SYM_TBL \
	INCLUDE_SYM_TBL_INIT \
	INCLUDE_SYSCLK_INIT \
	INCLUDE_SYSHW_INIT \
	INCLUDE_SYS_START \
	INCLUDE_TASK_HOOKS \
	INCLUDE_TASK_SHOW \
	INCLUDE_TASK_VARS \
	INCLUDE_TCP \
	INCLUDE_TFTP_CLIENT \
	INCLUDE_TIMESTAMP \
	INCLUDE_TIMEX \
	INCLUDE_TTY_DEV \
	INCLUDE_UDP \
	INCLUDE_USER_APPL \
	INCLUDE_VXEVENTS \
	INCLUDE_WATCHDOGS \
	INCLUDE_WDB \
	INCLUDE_WDB_BANNER \
	INCLUDE_WDB_BP \
	INCLUDE_WDB_COMM_END \
	INCLUDE_WDB_CTXT \
	INCLUDE_WDB_DIRECT_CALL \
	INCLUDE_WDB_EVENTPOINTS \
	INCLUDE_WDB_EVENTS \
	INCLUDE_WDB_EXC_NOTIFY \
	INCLUDE_WDB_EXIT_NOTIFY \
	INCLUDE_WDB_FUNC_CALL \
	INCLUDE_WDB_GOPHER \
	INCLUDE_WDB_MEM \
	INCLUDE_WDB_REG \
	INCLUDE_WDB_START_NOTIFY \
	INCLUDE_WDB_SYS \
	INCLUDE_WDB_TASK \
	INCLUDE_WDB_TASK_BP \
	INCLUDE_WDB_TSFS \
	INCLUDE_WDB_USER_EVENT \
	INCLUDE_WDB_VIO \
	INCLUDE_WDB_VIO_LIB
COMPONENT_LIBS = 


include $(TGT_DIR)/h/make/defs.project


## build-configuration info

ifeq ($(BUILD_SPEC),default)
AR               = ararm
AS               = ccarm
BOOT_EXTRA       = romInit_C.o
CC               = ccarm
CC_ARCH_SPEC     = -mapcs-32 -mlittle-endian -march=armv4
CFLAGS           = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -DARMEL -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/BJUT_9200 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T
CFLAGS_AS        = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -P -xassembler-with-cpp -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/BJUT_9200 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T
CFLAGS_AS_PROJECT = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)\target\config\all -I$(WIND_BASE)\target/h -I$(WIND_BASE)\target/src/config -I$(WIND_BASE)\target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DARMEL -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T -P -xassembler-with-cpp
CFLAGS_PROJECT   = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)\target\config\all -I$(WIND_BASE)\target/h -I$(WIND_BASE)\target/src/config -I$(WIND_BASE)\target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DARMEL -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T
CPP              = ccarm -E -P
EXTRA_MODULES    = 
LD               = ldarm
LDFLAGS          = -X -EL -N
LD_LINK_PATH     = -L$(WIND_BASE)/target/lib/arm/ARMARCH4/gnu -L$(WIND_BASE)/target/lib/arm/ARMARCH4/common
LD_PARTIAL       = ccarm -r -nostdlib -Wl,-X -Wl,-EL
LD_PARTIAL_FLAGS = -X -EL -r
LIBS             = $(VX_OS_LIBS)
NM               = nmarm -g
OPTION_DEFINE_MACRO = -D
OPTION_DEPEND    = -M -w
OPTION_GENERATE_DEPENDENCY_FILE = -MD
OPTION_INCLUDE_DIR = -I
OPTION_LANG_C    = -xc
OPTION_UNDEFINE_MACRO = -U
POST_BUILD_RULE  = 
RAM_HIGH_ADRS    = 23E00000 # RAM text/data address
RAM_LOW_ADRS     = 20001000 # 32M RAM text/data address
SIZE             = sizearm
TOOL_FAMILY      = gnu
VMA_START        = 0x$(ROM_TEXT_ADRS)
endif

ifeq ($(BUILD_SPEC),default_rom)
AR               = ararm
AS               = ccarm
BOOT_EXTRA       = romInit_C.o
CC               = ccarm
CC_ARCH_SPEC     = -mapcs-32 -mlittle-endian -march=armv4
CFLAGS           = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -DARMEL -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/BJUT_9200 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T
CFLAGS_AS        = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -P -xassembler-with-cpp -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/BJUT_9200 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T
CFLAGS_AS_PROJECT = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)\target\config\all -I$(WIND_BASE)\target/h -I$(WIND_BASE)\target/src/config -I$(WIND_BASE)\target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DARMEL -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T -P -xassembler-with-cpp
CFLAGS_PROJECT   = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)\target\config\all -I$(WIND_BASE)\target/h -I$(WIND_BASE)\target/src/config -I$(WIND_BASE)\target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DARMEL -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T
CPP              = ccarm -E -P
EXTRA_MODULES    = 
HEX_FLAGS        = 
LD               = ldarm
LDFLAGS          = -X -EL -N
LD_LINK_PATH     = -L$(WIND_BASE)/target/lib/arm/ARMARCH4/gnu -L$(WIND_BASE)/target/lib/arm/ARMARCH4/common
LD_PARTIAL       = ccarm -r -nostdlib -Wl,-X -Wl,-EL
LD_PARTIAL_FLAGS = -X -EL -r
LIBS             = $(VX_OS_LIBS)
NM               = nmarm -g
OPTION_DEFINE_MACRO = -D
OPTION_DEPEND    = -M -w
OPTION_GENERATE_DEPENDENCY_FILE = -MD
OPTION_INCLUDE_DIR = -I
OPTION_LANG_C    = -xc
OPTION_UNDEFINE_MACRO = -U
POST_BUILD_RULE  = 
RAM_HIGH_ADRS    = 23E00000 # RAM text/data address
RAM_LOW_ADRS     = 20001000 # 32M RAM text/data address
ROM_SIZE         = 00200000 # 2M number of bytes of ROM space
ROM_TEXT_ADRS    = 10000000 # ROM entry address
SIZE             = sizearm
TOOL_FAMILY      = gnu
VMA_START        = 0x$(ROM_TEXT_ADRS)
endif

ifeq ($(BUILD_SPEC),default_romCompress)
AR               = ararm
AS               = ccarm
BOOT_EXTRA       = romInit_C.o
CC               = ccarm
CC_ARCH_SPEC     = -mapcs-32 -mlittle-endian -march=armv4
CFLAGS           = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -DARMEL -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/BJUT_9200 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T
CFLAGS_AS        = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -P -xassembler-with-cpp -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/BJUT_9200 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T
CFLAGS_AS_PROJECT = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)\target\config\all -I$(WIND_BASE)\target/h -I$(WIND_BASE)\target/src/config -I$(WIND_BASE)\target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DARMEL -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T -P -xassembler-with-cpp
CFLAGS_PROJECT   = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)\target\config\all -I$(WIND_BASE)\target/h -I$(WIND_BASE)\target/src/config -I$(WIND_BASE)\target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DARMEL -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T
CPP              = ccarm -E -P
EXTRA_MODULES    = 
HEX_FLAGS        = 
LD               = ldarm
LDFLAGS          = -X -EL -N
LD_LINK_PATH     = -L$(WIND_BASE)/target/lib/arm/ARMARCH4/gnu -L$(WIND_BASE)/target/lib/arm/ARMARCH4/common
LD_PARTIAL       = ccarm -r -nostdlib -Wl,-X -Wl,-EL
LD_PARTIAL_FLAGS = -X -EL -r
LIBS             = $(VX_OS_LIBS)
NM               = nmarm -g
OPTION_DEFINE_MACRO = -D
OPTION_DEPEND    = -M -w
OPTION_GENERATE_DEPENDENCY_FILE = -MD
OPTION_INCLUDE_DIR = -I
OPTION_LANG_C    = -xc
OPTION_UNDEFINE_MACRO = -U
RAM_HIGH_ADRS    = 23E00000 # RAM text/data address
RAM_LOW_ADRS     = 20001000 # 32M RAM text/data address
ROM_SIZE         = 00200000 # 2M number of bytes of ROM space
ROM_TEXT_ADRS    = 10000000 # ROM entry address
SIZE             = sizearm
TOOL_FAMILY      = gnu
VMA_START        = 0x$(ROM_TEXT_ADRS)
POST_BUILD_RULE  = 
endif

ifeq ($(BUILD_SPEC),default_romResident)
AR               = ararm
AS               = ccarm
BOOT_EXTRA       = romInit_C.o
CC               = ccarm
CC_ARCH_SPEC     = -mapcs-32 -mlittle-endian -march=armv4
CFLAGS           = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -DARMEL -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/BJUT_9200 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T
CFLAGS_AS        = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -P -xassembler-with-cpp -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/BJUT_9200 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T
CFLAGS_AS_PROJECT = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)\target\config\all -I$(WIND_BASE)\target/h -I$(WIND_BASE)\target/src/config -I$(WIND_BASE)\target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DARMEL -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T -P -xassembler-with-cpp
CFLAGS_PROJECT   = -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -I/h -I. -I$(WIND_BASE)\target\config\all -I$(WIND_BASE)\target/h -I$(WIND_BASE)\target/src/config -I$(WIND_BASE)\target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DARMEL -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T
CPP              = ccarm -E -P
EXTRA_MODULES    = 
HEX_FLAGS        = 
LD               = ldarm
LDFLAGS          = -X -EL -N
LD_LINK_PATH     = -L$(WIND_BASE)/target/lib/arm/ARMARCH4/gnu -L$(WIND_BASE)/target/lib/arm/ARMARCH4/common
LD_PARTIAL       = ccarm -r -nostdlib -Wl,-X -Wl,-EL
LD_PARTIAL_FLAGS = -X -EL -r
LIBS             = $(VX_OS_LIBS)
NM               = nmarm -g
OPTION_DEFINE_MACRO = -D
OPTION_DEPEND    = -M -w
OPTION_GENERATE_DEPENDENCY_FILE = -MD
OPTION_INCLUDE_DIR = -I
OPTION_LANG_C    = -xc
OPTION_UNDEFINE_MACRO = -U
RAM_HIGH_ADRS    = 23E00000 # RAM text/data address
RAM_LOW_ADRS     = 20001000 # 32M RAM text/data address
ROM_SIZE         = 00200000 # 2M number of bytes of ROM space
ROM_TEXT_ADRS    = 10000000 # ROM entry address
SIZE             = sizearm
TOOL_FAMILY      = gnu
VMA_START        = 0x$(ROM_TEXT_ADRS)
POST_BUILD_RULE  = 
endif

# override make definitions only below this line


# override make definitions only above this line

include $(TGT_DIR)/h/make/rules.project


## build-configuration info

sysALib.o: $(PRJ_DIR)/prjParams.h

ifeq ($(BUILD_SPEC),default)

usrAppInit.o:
	$(CC) -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -DARMEL -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/BJUT_9200 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T -c $(PRJ_DIR)/usrAppInit.c
endif

ifeq ($(BUILD_SPEC),default_rom)

usrAppInit.o:
	$(CC) -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -DARMEL -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/BJUT_9200 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T -c $(PRJ_DIR)/usrAppInit.c
endif

ifeq ($(BUILD_SPEC),default_romCompress)

usrAppInit.o:
	$(CC) -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -DARMEL -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/BJUT_9200 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T -c $(PRJ_DIR)/usrAppInit.c
endif

ifeq ($(BUILD_SPEC),default_romResident)

usrAppInit.o:
	$(CC) -g -mapcs-32 -mlittle-endian -march=armv4 -ansi -fno-builtin -DARMEL -I$(PRJ_DIR) -I$(WIND_BASE)/target/config/BJUT_9200 -I$(WIND_BASE)/target/h -I$(WIND_BASE)/target/config/comps/src -I$(WIND_BASE)/target/src/drv -DCPU=ARMARCH4 -DTOOL_FAMILY=gnu -DTOOL=gnu -DPRJ_BUILD -Wcomment -DCPU_920T -DARMMMU=ARMMMU_920T -DARMCACHE=ARMCACHE_920T -c $(PRJ_DIR)/usrAppInit.c
endif


## dependencies


sysALib.o: $(WIND_BASE)/target/config/BJUT_9200/sysALib.s \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h


at91EMAC.o: $(WIND_BASE)/target/config/BJUT_9200/at91EMAC.c \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/arm-wrs-vxworks/2.9-010413/include/stddef.h \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/arm-wrs-vxworks/2.9-010413/include/stdarg.h \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h


romInit_C.o: $(WIND_BASE)/target/config/BJUT_9200/romInit_C.c \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/arm-wrs-vxworks/2.9-010413/include/stddef.h \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h


sysLib.o: $(WIND_BASE)/target/config/BJUT_9200/sysLib.c \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/arm-wrs-vxworks/2.9-010413/include/stddef.h \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h


romInit.o: $(WIND_BASE)/target/config/BJUT_9200/romInit.s \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h


romStart.o: $(WIND_BASE)/target/config/comps/src/romStart.c \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/arm-wrs-vxworks/2.9-010413/include/stddef.h \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/arm-wrs-vxworks/2.9-010413/include/stdarg.h


usrAppInit.o: $(PRJ_DIR)/usrAppInit.c


prjConfig.o: $(PRJ_DIR)/prjConfig.c \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/arm-wrs-vxworks/2.9-010413/include/stddef.h \
	$(PRJ_DIR)/prjComps.h \
	$(PRJ_DIR)/prjParams.h \
	$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/arm-wrs-vxworks/2.9-010413/include/stdarg.h


linkSyms.o: $(PRJ_DIR)/linkSyms.c


## user defined rules

vxWorks.res_rom.bin: vxWorks.res_rom
	- @ $(RM) $@
	$(EXTRACT_BIN) -O binary vxWorks.res_rom $@

vxWorks_rom.bin: vxWorks_rom
	- @ $(RM) $@
	$(EXTRACT_BIN) -O binary vxWorks_rom $@

romStart.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS) $(PROJECT_BSP_FLAGS_EXTRA) $(ROM_FLAGS_EXTRA) $< -o $@

romInit_C.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS) $(PROJECT_BSP_FLAGS_EXTRA) $(WIND_BASE)/target/config/BJUT_9200/romInit_C.c -o $@

bootrom.bin: bootrom
	- @ $(RM) $@
	$(EXTRACT_BIN) -O binary bootrom $@

at91EMAC.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS) $(PROJECT_BSP_FLAGS_EXTRA) $(WIND_BASE)/target/config/BJUT_9200/at91EMAC.c -o $@

vxWorks.bin : vxWorks
	objcopyarm -I elf32-littlearm -O binary vxWorks vxWorks.bin

bootrom_uncmp.bin: bootrom_uncmp
	- @ $(RM) $@
	$(EXTRACT_BIN) -O binary bootrom_uncmp $@

romInit.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS_AS) $(PROJECT_BSP_FLAGS_EXTRA) $(ROM_FLAGS_EXTRA) $< -o $@

linkSyms.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS) $(PROJECT_BSP_FLAGS_EXTRA) $(PRJ_DIR)/linkSyms.c -o $@

bootrom_res.bin: bootrom_res
	- @ $(RM) $@
	$(EXTRACT_BIN) -O binary bootrom_res $@

sysLib.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS) $(PROJECT_BSP_FLAGS_EXTRA) $(WIND_BASE)/target/config/BJUT_9200/sysLib.c -o $@

sysALib.o : 
	$(AS) $(OPTION_OBJECT_ONLY) $(CFLAGS_AS) $(PROJECT_BSP_FLAGS_EXTRA) $(WIND_BASE)/target/config/BJUT_9200/sysALib.s -o $@

vxWorks.st_rom.bin: vxWorks.st_rom
	- @ $(RM) $@
	$(EXTRACT_BIN) -O binary vxWorks.st_rom $@

vxWorks.res_rom_nosym.bin: vxWorks.res_rom_nosym
	- @ $(RM) $@
	$(EXTRACT_BIN) -O binary vxWorks.res_rom_nosym $@

prjConfig.o : 
	$(CC) $(OPTION_OBJECT_ONLY) $(CFLAGS) $(PROJECT_BSP_FLAGS_EXTRA) $(PRJ_DIR)/prjConfig.c -o $@

